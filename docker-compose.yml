# docker-compose.yml
version: '3.8'

services:
  # ───────────────────────────────────────────────────────────────────────────────
  # 1) MongoDB
  # ───────────────────────────────────────────────────────────────────────────────
  mongo:
    image: mongo:latest
    container_name: encodergroup-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - encodergroup-network
    restart: unless-stopped

  # ───────────────────────────────────────────────────────────────────────────────
  # 2) Backend (FastAPI)
  # ───────────────────────────────────────────────────────────────────────────────
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: encodergroup-server
    ports:
      - "8000:8000"
    depends_on:
      - mongo
    environment:
      # variables para producción (se usan en server/app/core/config.py)
      - MONGO_URI=mongodb://mongo:27017/encodergroup
      - ENVIRONMENT=production
      - JWT_SECRET=encodergroup_jwt_secret_key_secure_2023
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=10080   # 7 días
      - SMTP_HOST=mail.encodergroup.cl
      - SMTP_PORT=465
      - SMTP_USER=noreply@encodergroup.cl
      - SMTP_PASSWORD=.3H*qU8MI&?g
      - SMTP_SSL=true
      - SMTP_VERIFY_SSL=false
      - CLIENT_URL=http://localhost             # para enlaces de verificación
      - ADMIN_EMAIL=admin@encodergroup.cl
      - PYTHONUNBUFFERED=1
    volumes:
      - ./server/app:/app/app
      - ./server/scripts:/app/scripts
      - ./server/uploads:/app/uploads
    networks:
      - encodergroup-network
    restart: unless-stopped

  # ───────────────────────────────────────────────────────────────────────────────
  # 3) Frontend (React + nginx)
  # ───────────────────────────────────────────────────────────────────────────────
  client:
    build:
      context: ./client-new
      dockerfile: Dockerfile
    container_name: encodergroup-client
    ports:
      - "80:80"
    depends_on:
      - server
    networks:
      - encodergroup-network
    restart: unless-stopped

# Volúmenes persistentes
volumes:
  mongo-data:

# Red compartida
networks:
  encodergroup-network:
    driver: bridge
